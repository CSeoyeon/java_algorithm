import java.util.*;

class Main {

	static int[] arrayC;
	static int[] arrayP;
	static int[] check;
	boolean flag = false;
	static int n, f; 
	
	int[][] dy = new int[35][35];
	public int combi(int n, int r) {
		if (dy[n][r] > 0) return dy[n][r];
		if (n == r || r == 0) return 1;
		else return dy[n][r] = combi(n - 1, r - 1) + combi(n - 1, r);
	}

	public void DFS(int L, int sum) {
		if(flag == true) {return;}
		
		if(L == n) {
			if(sum ==f) {
				for(int x : arrayP) {
					System.out.print(x+ " ");
				}
				flag = true;
			}
		}
		else {
			//i 자체가 순열을 만드는 숫자
			for(int i =1; i<=n; i++) {
				if(check[i] == 0) {
					check[i] = 1;
					arrayP[L] =i;
					
					DFS(L+1, sum+(arrayP[L]*arrayC[L]));
					check[i] = 0;
				}
			}
		}
	}

	public static void main(String[] args) {
		Main T = new Main();
		Scanner scanner = new Scanner(System.in);
		n = scanner.nextInt();
		f = scanner.nextInt();
		arrayC = new int[n];
		arrayP = new int[n];
		check = new int[n+1];
		
		for(int i =0; i<n; i++) {
			arrayC[i] = T.combi(n-1, i); 
		}
		
		T.DFS(0,0);
		
	}
}

import java.awt.Frame;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.time.zone.ZoneOffsetTransitionRule;
import java.util.StringTokenizer;
import java.util.Spliterator.OfPrimitive;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.function.IntPredicate;

import javax.lang.model.element.NestingKind;

import org.jcp.xml.dsig.internal.dom.DOMTransform;

public class Main {

	public StringBuilder solution(String string) {
		StringBuilder answer = new StringBuilder();

		char[] charArray = string.toCharArray();
		int count = 1;
		
		
		for(int i =0; i<charArray.length; i++) {
			if(charArray[i] == charArray[i+1]) {
				count ++;
			}
			else {
				answer.append(charArray[i]);
				if(count == 1 && count == 0) {
					;
				}
				else {
					answer.append(count);
				}
				count = 0;
			}
		}
		
		return answer;
	}

	public static void main(String[] args) throws IOException {
		Main T = new Main();

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer stringTokenizer = new StringTokenizer(br.readLine(), " ");
		
		String string = stringTokenizer.nextToken();
		
		System.out.println(T.solution(string));
	

	}
}

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

    public int solution(int n, int k, int[] array) {
        int answer = 0;
        int lt = 0;

        //rt가 1로 바꾼 횟수
        int cnt = 0;

        for (int rt = 0; rt < n; rt++) {
            if (array[rt] == 0) {
                cnt++;
            }
            while(cnt>k){
                if (array[lt] == 0){
                    cnt--;
                }
                lt++;
            }
            // rt-lt+1 -> 수열의 길이
            answer = Math.max(answer, rt-lt+1);
        }


        return answer;
    }

    public static void main(String[] args) throws IOException {
        Main T = new Main();

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        int[] array = new int[n];
        StringTokenizer st2 = new StringTokenizer(br.readLine());

        for (int i = 0; i < n; i++) {
            array[i] = Integer.parseInt(st2.nextToken());
        }

        System.out.println(T.solution(n, k, array));

    }

}


import java.util.*;

class Main {
	
	//int n = 정점의 수, int m = 간선의 수 
	static int n, m;
	static ArrayList<ArrayList<Integer>> graph;
	static int[] check, distance;
	
	
	//v - vertex 
	public void BFS(int v) {
		Queue<Integer> queue = new LinkedList<>();
		check[v] = 1;
		distance[v] = 0;
		queue.offer(v);
		
		while(!queue.isEmpty()) {
			int cv = queue.poll();
			for(int nv : graph.get(cv)) {
				if(check[nv] == 0 ) {
					check[nv] = 1;
					queue.offer(nv);
					distance[nv] = distance[cv]+1;
					
					
				}
			}
		}
		
	}

	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner scanner = new Scanner(System.in);
		n = scanner.nextInt();
		m = scanner.nextInt();
		
		graph = new ArrayList<ArrayList<Integer>>();
		
		for(int i=0; i<=n; i++) {
			graph.add(new ArrayList<Integer>());
		}
		check = new int[n+1];
		distance = new int[n+1];
		
		for(int i=0; i<m; i++) {
			int a = scanner.nextInt();
			int b = scanner.nextInt();
			graph.get(a).add(b);
		}
		T.BFS(1);
		for(int i =2; i<=n; i++) {
			System.out.println(i + " : " + distance[i]);
		}
		
	}

}


import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UTFDataFormatException;
import java.nio.charset.spi.CharsetProvider;
import java.security.AlgorithmConstraints;
import java.time.zone.ZoneOffsetTransitionRule;
import java.util.StringTokenizer;
import java.util.ArrayList;
import java.util.Spliterator.OfPrimitive;

import javax.lang.model.type.ArrayType;
import javax.naming.spi.DirStateFactory.Result;
import javax.security.auth.callback.ConfirmationCallback;


public class Main {

	public int solution(int n, int[] array) {
		
		int answer = 0; 
		 
		int check =0; 
		
		for(int i =0; i<n; i++) {
			if(array[i] == 1) {
				check++;
				answer += check;
			}
			else {
				check = 0;
			}
			
		}

		return answer;
	}
	

	public static void main(String[] args) throws IOException {
		Main T = new Main();

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		
		int n = Integer.parseInt(br.readLine());
		StringTokenizer stringTokenizer = new StringTokenizer(br.readLine());
		int[] array = new int[n];
		
		for(int i =0; i<n; i++) {
			array[i] = Integer.parseInt(stringTokenizer.nextToken());
		}
	
		
		System.out.print(T.solution(n, array));
		

	}
}

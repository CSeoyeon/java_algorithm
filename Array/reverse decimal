
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UTFDataFormatException;
import java.nio.charset.spi.CharsetProvider;
import java.security.AlgorithmConstraints;
import java.time.zone.ZoneOffsetTransitionRule;
import java.util.StringTokenizer;
import java.util.ArrayList;
import java.util.Spliterator.OfPrimitive;

import javax.lang.model.type.ArrayType;
import javax.naming.spi.DirStateFactory.Result;
import javax.security.auth.callback.ConfirmationCallback;


public class Main {

	public ArrayList<Integer> solution(int n, int[] array) {
		
		ArrayList<Integer> answer= new ArrayList<>();
 
		for(int i = 0; i<n; i++) {
			int tmp = array[i];
			int result = 0; 
			
			while (tmp > 0) {
				int  t = tmp %10; 
				result = result *10 + t;
				tmp = tmp / 10;
			}
			
			if(isPrime(result) == true) {
				answer.add(result);
			}
		}
		

		return answer;
	}
	
	
	public boolean isPrime(int num) {
		if(num == 1) {return false;}
		for(int i =2; i<num; i++) {
			if(num % i == 0) {
				return false; 
			}
		}
		return true;
		
	}

	public static void main(String[] args) throws IOException {
		Main T = new Main();

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		
		int n = Integer.parseInt(br.readLine());
		StringTokenizer stringTokenizer = new StringTokenizer(br.readLine());
		int[] array = new int[n];
		
		for(int i =0; i<n; i++) {
			array[i] = Integer.parseInt(stringTokenizer.nextToken());
		}
		
		for(int s : T.solution(n, array)) {
			System.out.print(s+ " ");
		}
		

	}
}
